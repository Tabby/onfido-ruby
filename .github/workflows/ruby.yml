name: Ruby CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ["2.7", "3.0", "3.1", "3.2"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Run integration tests
        if: ${{ matrix.ruby-version == '3.2' &&
          github.repository_owner == 'onfido' }}
        run: bundle exec rspec spec
        env:
          ONFIDO_API_TOKEN: ${{ secrets.ONFIDO_API_TOKEN }}
          ONFIDO_SAMPLE_APPLICANT_ID: ${{ secrets.ONFIDO_SAMPLE_APPLICANT_ID }}
          ONFIDO_SAMPLE_VIDEO_ID_1: ${{ secrets.ONFIDO_SAMPLE_VIDEO_ID_1 }}
          ONFIDO_SAMPLE_VIDEO_ID_2: ${{ secrets.ONFIDO_SAMPLE_VIDEO_ID_2 }}
          ONFIDO_SAMPLE_MOTION_ID_1: ${{ secrets.ONFIDO_SAMPLE_MOTION_ID_1 }}
          ONFIDO_SAMPLE_MOTION_ID_2: ${{ secrets.ONFIDO_SAMPLE_MOTION_ID_2 }}

  publish:
    runs-on: ubuntu-latest
    needs: integration-tests
    environment: delivery
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ACTION_ACCESS_TOKEN }}
      - name: Set up Ruby 2.7
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.7"

      - name: Publish to RubyGems
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
          gem build *.gemspec
          gem push *.gem
        env:
          GEM_HOST_API_KEY: "${{secrets.RUBYGEMS_AUTH_TOKEN}}"
      - name: Update CHANGELOG.md
        run: |
          TMP_FILE=$(mktemp)

          RELEASE_VERSION=$(jq -r '.release' .release.json)
          RELEASE_DATE=`date +'%dth %B %Y' | sed -E 's/^0//;s/^([2,3]?)1th/\11st/;s/^([2]?)2th/\12nd/;s/^([2]?)3th/\13rd/'`

          SPEC_COMMIT_SHA=$(jq -r '.source.short_sha' .release.json)
          SPEC_COMMIT_URL=$(jq -r '.source.repo_url + "/commit/" + .source.long_sha' .release.json)
          SPEC_RELEASE_VERSION=$(jq -r '.source.version' .release.json)
          SPEC_RELEASE_URL=$(jq -r '.source.repo_url + "/releases/tag/" + .source.version' .release.json)

          echo -e "# Changelog\n\n## $RELEASE_VERSION $RELEASE_DATE\n\n" >| $TMP_FILE
          echo -en "${{ github.event.release.body }}\nBased on Onfido OpenAPI spec " >> $TMP_FILE

          if [ -z $SPEC_RELEASE_VERSION ]; then
            echo "up to commit [$SPEC_COMMIT_SHA](${SPEC_COMMIT_URL})." >> $TMP_FILE
          else
            echo "version [$SPEC_RELEASE_VERSION](${SPEC_RELEASE_URL})." >> $TMP_FILE
          fi

          grep -v "^# Changelog" CHANGELOG.md >> $TMP_FILE
          mv $TMP_FILE CHANGELOG.md

          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git commit -m "Update CHANGELOG.md after library release" CHANGELOG.md
          git push
